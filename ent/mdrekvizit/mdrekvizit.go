// Code generated by entc, DO NOT EDIT.

package mdrekvizit

const (
	// Label holds the string label denoting the mdrekvizit type in the database.
	Label = "md_rekvizit"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "ID"
	// FieldNameeng holds the string denoting the nameeng field in the database.
	FieldNameeng = "Nameeng"
	// FieldSynonym holds the string denoting the synonym field in the database.
	FieldSynonym = "Synonym"
	// FieldPor holds the string denoting the por field in the database.
	FieldPor = "por"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "Type"
	// FieldOwnerID holds the string denoting the owner_id field in the database.
	FieldOwnerID = "owner_id"
	// FieldWidthSpisok holds the string denoting the widthspisok field in the database.
	FieldWidthSpisok = "width_spisok"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the mdrekvizit in the database.
	Table = "md_rekvizits"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "md_rekvizits"
	// OwnerInverseTable is the table name for the MDTabel entity.
	// It exists in this package in order to avoid circular dependency with the "mdtabel" package.
	OwnerInverseTable = "md_tabels"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "owner_id"
)

// Columns holds all SQL columns for mdrekvizit fields.
var Columns = []string{
	FieldID,
	FieldNameeng,
	FieldSynonym,
	FieldPor,
	FieldType,
	FieldOwnerID,
	FieldWidthSpisok,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameengValidator is a validator for the "nameeng" field. It is called by the builders before save.
	NameengValidator func(string) error
	// SynonymValidator is a validator for the "synonym" field. It is called by the builders before save.
	SynonymValidator func(string) error
	// PorValidator is a validator for the "por" field. It is called by the builders before save.
	PorValidator func(string) error
	// TypeValidator is a validator for the "type" field. It is called by the builders before save.
	TypeValidator func(string) error
	// OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	OwnerIDValidator func(string) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
