// Code generated by entc, DO NOT EDIT.

package mdtypetabel

const (
	// Label holds the string label denoting the mdtypetabel type in the database.
	Label = "md_type_tabel"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "ID"
	// FieldNameeng holds the string denoting the nameeng field in the database.
	FieldNameeng = "Nameeng"
	// FieldSynonym holds the string denoting the synonym field in the database.
	FieldSynonym = "Synonym"
	// FieldPor holds the string denoting the por field in the database.
	FieldPor = "Por"
	// FieldParent holds the string denoting the parent field in the database.
	FieldParent = "Parent"
	// EdgeChildMdtypetabels holds the string denoting the child_mdtypetabels edge name in mutations.
	EdgeChildMdtypetabels = "child_mdtypetabels"
	// EdgeParentMdtypetabels holds the string denoting the parent_mdtypetabels edge name in mutations.
	EdgeParentMdtypetabels = "parent_mdtypetabels"
	// EdgeMdtypetabels holds the string denoting the mdtypetabels edge name in mutations.
	EdgeMdtypetabels = "mdtypetabels"
	// Table holds the table name of the mdtypetabel in the database.
	Table = "md_type_tabels"
	// ChildMdtypetabelsTable is the table that holds the child_mdtypetabels relation/edge.
	ChildMdtypetabelsTable = "md_type_tabels"
	// ChildMdtypetabelsColumn is the table column denoting the child_mdtypetabels relation/edge.
	ChildMdtypetabelsColumn = "Parent"
	// ParentMdtypetabelsTable is the table that holds the parent_mdtypetabels relation/edge.
	ParentMdtypetabelsTable = "md_type_tabels"
	// ParentMdtypetabelsColumn is the table column denoting the parent_mdtypetabels relation/edge.
	ParentMdtypetabelsColumn = "Parent"
	// MdtypetabelsTable is the table that holds the mdtypetabels relation/edge.
	MdtypetabelsTable = "md_tabels"
	// MdtypetabelsInverseTable is the table name for the MDTabel entity.
	// It exists in this package in order to avoid circular dependency with the "mdtabel" package.
	MdtypetabelsInverseTable = "md_tabels"
	// MdtypetabelsColumn is the table column denoting the mdtypetabels relation/edge.
	MdtypetabelsColumn = "types_id"
)

// Columns holds all SQL columns for mdtypetabel fields.
var Columns = []string{
	FieldID,
	FieldNameeng,
	FieldSynonym,
	FieldPor,
	FieldParent,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameengValidator is a validator for the "nameeng" field. It is called by the builders before save.
	NameengValidator func(string) error
	// SynonymValidator is a validator for the "synonym" field. It is called by the builders before save.
	SynonymValidator func(string) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
