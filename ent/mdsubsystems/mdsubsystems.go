// Code generated by entc, DO NOT EDIT.

package mdsubsystems

const (
	// Label holds the string label denoting the mdsubsystems type in the database.
	Label = "md_sub_systems"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "ID"
	// FieldNamerus holds the string denoting the namerus field in the database.
	FieldNamerus = "Namerus"
	// FieldNameeng holds the string denoting the nameeng field in the database.
	FieldNameeng = "Nameeng"
	// FieldSynonym holds the string denoting the synonym field in the database.
	FieldSynonym = "Synonym"
	// FieldParent holds the string denoting the parent field in the database.
	FieldParent = "Parent"
	// EdgeChildMdsubsystems holds the string denoting the child_mdsubsystems edge name in mutations.
	EdgeChildMdsubsystems = "child_mdsubsystems"
	// EdgeParentMdsubsystems holds the string denoting the parent_mdsubsystems edge name in mutations.
	EdgeParentMdsubsystems = "parent_mdsubsystems"
	// EdgeMdtables holds the string denoting the mdtables edge name in mutations.
	EdgeMdtables = "mdtables"
	// Table holds the table name of the mdsubsystems in the database.
	Table = "md_sub_systems"
	// ChildMdsubsystemsTable is the table that holds the child_mdsubsystems relation/edge.
	ChildMdsubsystemsTable = "md_sub_systems"
	// ChildMdsubsystemsColumn is the table column denoting the child_mdsubsystems relation/edge.
	ChildMdsubsystemsColumn = "Parent"
	// ParentMdsubsystemsTable is the table that holds the parent_mdsubsystems relation/edge.
	ParentMdsubsystemsTable = "md_sub_systems"
	// ParentMdsubsystemsColumn is the table column denoting the parent_mdsubsystems relation/edge.
	ParentMdsubsystemsColumn = "Parent"
	// MdtablesTable is the table that holds the mdtables relation/edge. The primary key declared below.
	MdtablesTable = "md_sub_systems_mdtables"
	// MdtablesInverseTable is the table name for the MDTabel entity.
	// It exists in this package in order to avoid circular dependency with the "mdtabel" package.
	MdtablesInverseTable = "md_tabels"
)

// Columns holds all SQL columns for mdsubsystems fields.
var Columns = []string{
	FieldID,
	FieldNamerus,
	FieldNameeng,
	FieldSynonym,
	FieldParent,
}

var (
	// MdtablesPrimaryKey and MdtablesColumn2 are the table columns denoting the
	// primary key for the mdtables relation (M2M).
	MdtablesPrimaryKey = []string{"md_sub_systems_id", "md_tabel_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NamerusValidator is a validator for the "namerus" field. It is called by the builders before save.
	NamerusValidator func(string) error
	// NameengValidator is a validator for the "nameeng" field. It is called by the builders before save.
	NameengValidator func(string) error
	// SynonymValidator is a validator for the "synonym" field. It is called by the builders before save.
	SynonymValidator func(string) error
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
